// Code generated by go-swagger; DO NOT EDIT.

package blog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetBlogByIDHandlerFunc turns a function with the right signature into a get blog by Id handler
type GetBlogByIDHandlerFunc func(GetBlogByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetBlogByIDHandlerFunc) Handle(params GetBlogByIDParams) middleware.Responder {
	return fn(params)
}

// GetBlogByIDHandler interface for that can handle valid get blog by Id params
type GetBlogByIDHandler interface {
	Handle(GetBlogByIDParams) middleware.Responder
}

// NewGetBlogByID creates a new http.Handler for the get blog by Id operation
func NewGetBlogByID(ctx *middleware.Context, handler GetBlogByIDHandler) *GetBlogByID {
	return &GetBlogByID{Context: ctx, Handler: handler}
}

/*GetBlogByID swagger:route GET /blogs/{blogId} blog getBlogById

GetBlogByID get blog by Id API

*/
type GetBlogByID struct {
	Context *middleware.Context
	Handler GetBlogByIDHandler
}

func (o *GetBlogByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetBlogByIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
