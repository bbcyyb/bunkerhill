// Code generated by go-swagger; DO NOT EDIT.

package blog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// UpdateBlogHandlerFunc turns a function with the right signature into a update blog handler
type UpdateBlogHandlerFunc func(UpdateBlogParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateBlogHandlerFunc) Handle(params UpdateBlogParams) middleware.Responder {
	return fn(params)
}

// UpdateBlogHandler interface for that can handle valid update blog params
type UpdateBlogHandler interface {
	Handle(UpdateBlogParams) middleware.Responder
}

// NewUpdateBlog creates a new http.Handler for the update blog operation
func NewUpdateBlog(ctx *middleware.Context, handler UpdateBlogHandler) *UpdateBlog {
	return &UpdateBlog{Context: ctx, Handler: handler}
}

/*UpdateBlog swagger:route PUT /blogs/{blogId} blog updateBlog

UpdateBlog update blog API

*/
type UpdateBlog struct {
	Context *middleware.Context
	Handler UpdateBlogHandler
}

func (o *UpdateBlog) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateBlogParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
