// Code generated by go-swagger; DO NOT EDIT.

package blog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteBlogHandlerFunc turns a function with the right signature into a delete blog handler
type DeleteBlogHandlerFunc func(DeleteBlogParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteBlogHandlerFunc) Handle(params DeleteBlogParams) middleware.Responder {
	return fn(params)
}

// DeleteBlogHandler interface for that can handle valid delete blog params
type DeleteBlogHandler interface {
	Handle(DeleteBlogParams) middleware.Responder
}

// NewDeleteBlog creates a new http.Handler for the delete blog operation
func NewDeleteBlog(ctx *middleware.Context, handler DeleteBlogHandler) *DeleteBlog {
	return &DeleteBlog{Context: ctx, Handler: handler}
}

/*DeleteBlog swagger:route DELETE /blogs/{blogId} blog deleteBlog

DeleteBlog delete blog API

*/
type DeleteBlog struct {
	Context *middleware.Context
	Handler DeleteBlogHandler
}

func (o *DeleteBlog) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteBlogParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
