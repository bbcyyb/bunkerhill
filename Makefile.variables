nosudo = $(shell docker version > /dev/null 2>&1 && echo 1)
ifeq ($(nosudo),1)
	DOCKER_CMD := docker
else
	DOCKER_CMD := sudo docker
endif

ifeq ($(GOOS),)
	GOOS := linux
endif

ifeq ($(CGO_ENABLED),)
	CGO_ENABLED := 0
endif

# Basic go commands
GOCMD := go
GOINSTALL := $(GOCMD) install
GOBUILD := $(GOCMD) build
GOCLEAN := $(GOCMD) clean
GOTEST := $(GOCMD) test
GOGET := $(GOCMD) get
GOFMT := $(GOCMD)imports

# go-swagger commands
SWAGGER_GEN := swagger generate
SWAGGER_VALIDATE := swagger validate

# Basic path
BIN := $(GOPATH)/bin
PKG := $(GOPATH)/pkg
SRC:= $(GOPATH)/src
PROJECT_PATH := github.com/bbcyyb/bunkerhill
SERVER_PATH := $(PROJECT_PATH)/cmd/bunkerhill-server

DOCKER_BUILD := $(DOCKER_CMD) build
DOCKER_RUN := $(DOCKER_CMD) run
DOCKER_RM := $(DOCKER_CMD) rm
DOCKER_PS := $(DOCKER_CMD) ps
spec_container_id := $(shell docker ps -aq -f name=bunkerhill-server-dev)

PROD_IMAGE_NAME := bunkerhill-alpine
DEV_IMAGE_NAME := bunkerhill-alpine-dev
PROD_CONTAINER_NAME := bunkerhill
DEV_CONTAINER_NAME := bunkerhill-dev
export DEV_VOLUME_FROM = $(SRC)/$(PROJECT_PATH)
export DEV_VOLUME_TO = /go/src/$(PROJECT_PATH)

COMPOSE_CMD := docker-compose
COMPOSE_UP := up
COMPOSE_DOWN := down
COMPOSE_BUILD := build

DOCKERFILE_DEV := docker/Dockerfile.dev
DOCKERFILE_PROD := docker/Dockerfile.prod
COMPOSEFILE_PROD := docker/docker-compose-prod.yaml
COMPOSEFILE_DEV := docker/docker-compose-dev.yaml

export PROJECT_NAME = bunkerhill
BINARY_NAME := bunkerhill-server

